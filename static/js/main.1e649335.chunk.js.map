{"version":3,"sources":["utils/config.js","utils/near.js","components/Wallet.js","components/utils/Notifications.js","components/donatarium/AddAnimal.js","components/donatarium/Animal.js","components/utils/Loader.js","utils/marketplace.js","components/donatarium/Animals.js","components/utils/Cover.js","assets/img/coverImg.jpg","App.js","reportWebVitals.js","index.js"],"names":["CONTRACT_NAME","process","environment","env","networkId","nodeUrl","contractName","walletUrl","helperUrl","explorerUrl","Error","nearEnv","connect","Object","assign","deps","keyStore","keyStores","BrowserLocalStorageKeyStore","near","window","walletConnection","WalletConnection","accountId","getAccountId","contract","Contract","account","viewMethods","changeMethods","accountBalance","formatNearAmount","getAccountBalance","total","login","requestSignIn","then","logout","signOut","location","reload","Wallet","address","amount","symbol","destroy","Dropdown","Toggle","variant","align","id","className","Spinner","animation","size","Menu","Item","href","target","Stack","direction","gap","Divider","as","onClick","Notification","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","NotificationSuccess","text","NotificationError","DefaultProps","defaultProps","AddAnimal","save","useState","name","setName","image","setImage","description","setDescription","population","setPopulation","show","setShow","handleClose","Button","style","width","Modal","onHide","centered","Header","closeButton","Title","Form","Body","FloatingLabel","controlId","label","Control","type","onChange","e","value","placeholder","height","Footer","disabled","Animal","animal","donate","deleteAnimal","owner","donation","isOwner","Col","Card","Badge","bg","src","alt","objectFit","Text","Loader","role","GAS","donateOneNear","parseNearAmount","Animals","animals","setAnimals","loading","setLoading","getAnimals","useCallback","console","log","error","addAnimal","data","uuid4","setAnimal","toast","deleteOwnerAnimal","useEffect","Row","xs","sm","lg","map","_animal","Cover","coverImg","background","minHeight","maxWidth","App","balance","setBalance","getBalance","Container","fluid","Nav","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","nearInitPromise","initializeContract","ReactDOM","createRoot","document","getElementById","render","StrictMode","catch"],"mappings":"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","file":"static/js/main.1e649335.chunk.js","sourcesContent":["const CONTRACT_NAME = process.env.CONTRACT_NAME || \"swl-contract.market_vgnsbg.testnet\";\r\n\r\nfunction environment(env) {\r\n    switch (env) {\r\n        case \"mainnet\": // line 5\r\n            return {\r\n                networkId: \"mainnet\",\r\n                nodeUrl: \"https://rpc.mainnet.near.org\",\r\n                contractName: CONTRACT_NAME,\r\n                walletUrl: \"https://wallet.near.org\",\r\n                helperUrl: \"https://helper.mainnet.near.org\",\r\n                explorerUrl: \"https://explorer.mainnet.near.org\",\r\n            };\r\n        case \"testnet\": // line 14\r\n            return {\r\n                networkId: \"testnet\",\r\n                nodeUrl: \"https://rpc.testnet.near.org\",\r\n                contractName: CONTRACT_NAME,\r\n                walletUrl: \"https://wallet.testnet.near.org\",\r\n                helperUrl: \"https://helper.testnet.near.org\",\r\n                explorerUrl: \"https://explorer.testnet.near.org\",\r\n            };\r\n        default:\r\n            throw Error(`Unknown environment '${env}'.`);\r\n    }\r\n}\r\n\r\nexport default environment;","import environment from \"./config\";\r\nimport {connect, Contract, keyStores, WalletConnection} from \"near-api-js\";\r\nimport {formatNearAmount} from \"near-api-js/lib/utils/format\";\r\n\r\nconst nearEnv = environment(\"testnet\");\r\n\r\nexport async function initializeContract() {\r\n    const near = await connect(\r\n        Object.assign(\r\n            {deps: {keyStore: new keyStores.BrowserLocalStorageKeyStore()}},\r\n            nearEnv\r\n        )\r\n    );\r\n    window.walletConnection = new WalletConnection(near, null);\r\n    window.accountId = window.walletConnection.getAccountId();\r\n    window.contract = new Contract(\r\n        window.walletConnection.account(),\r\n        nearEnv.contractName,\r\n        {\r\n            viewMethods: [\"getAnimal\", \"getAnimals\"],\r\n            changeMethods: [\"donateOneNear\", \"setAnimal\", \"deleteAnimal\", \"resetAnimals\"],\r\n        }\r\n    );\r\n}\r\n\r\nexport async function accountBalance() {\r\n    return formatNearAmount(\r\n        (await window.walletConnection.account().getAccountBalance()).total,\r\n        2\r\n    );\r\n}\r\n\r\nexport async function getAccountId() {\r\n    return window.walletConnection.getAccountId();\r\n}\r\n\r\nexport function login() {\r\n    window.walletConnection.requestSignIn(nearEnv.contractName).then();\r\n}\r\n\r\nexport function logout() {\r\n    window.walletConnection.signOut();\r\n    window.location.reload();\r\n}","import React from \"react\";\r\nimport { Dropdown, Stack, Spinner } from \"react-bootstrap\";\r\n\r\nconst Wallet = ({ address, amount, symbol, destroy }) => {\r\n    if (address) {\r\n        return (\r\n            <>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle\r\n                        variant=\"light\"\r\n                        align=\"end\"\r\n                        id=\"dropdown-basic\"\r\n                        className=\"d-flex align-items-center border rounded-pill py-1\"\r\n                    >\r\n                        {amount ? (\r\n                            <>\r\n                                {amount} <span className=\"ms-1\"> {symbol}</span>\r\n                            </>\r\n                        ) : (\r\n                            <Spinner animation=\"border\" size=\"sm\" className=\"opacity-25\" />\r\n                        )}\r\n                    </Dropdown.Toggle>\r\n\r\n                    <Dropdown.Menu className=\"shadow-lg border-0\">\r\n                        <Dropdown.Item\r\n                            href={`https://explorer.testnet.near.org/accounts/${address}`}\r\n                            target=\"_blank\"\r\n                        >\r\n                            <Stack direction=\"horizontal\" gap={2}>\r\n                                <i className=\"bi bi-person-circle fs-4\" />\r\n                                <span className=\"font-monospace\">{address}</span>\r\n                            </Stack>\r\n                        </Dropdown.Item>\r\n\r\n                        <Dropdown.Divider />\r\n                        <Dropdown.Item\r\n                            as=\"button\"\r\n                            className=\"d-flex align-items-center\"\r\n                            onClick={() => {\r\n                                destroy();\r\n                            }}\r\n                        >\r\n                            <i className=\"bi bi-box-arrow-right me-2 fs-4\" />\r\n                            Disconnect\r\n                        </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default Wallet;","import React from \"react\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Notification = () => (\r\n    <ToastContainer\r\n        position=\"bottom-center\"\r\n        autoClose={5000}\r\n        hideProgressBar\r\n        newestOnTop\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable={false}\r\n        pauseOnHover\r\n    />\r\n);\r\n\r\nconst NotificationSuccess = ({ text }) => (\r\n    <div>\r\n        <i className=\"bi bi-check-circle-fill text-success mx-2\" />\r\n        <span className=\"text-secondary mx-1\">{text}</span>\r\n    </div>\r\n);\r\n\r\nconst NotificationError = ({ text }) => (\r\n    <div>\r\n        <i className=\"bi bi-x-circle-fill text-danger mx-2\" />\r\n        <span className=\"text-secondary mx-1\">{text}</span>\r\n    </div>\r\n);\r\n\r\nconst Props = {\r\n    text: PropTypes.string,\r\n};\r\n\r\nconst DefaultProps = {\r\n    text: \"\",\r\n};\r\n\r\nNotificationSuccess.propTypes = Props;\r\nNotificationSuccess.defaultProps = DefaultProps;\r\n\r\nNotificationError.propTypes = Props;\r\nNotificationError.defaultProps = DefaultProps;\r\n\r\nexport { Notification, NotificationSuccess, NotificationError };","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Button, FloatingLabel, Form, Modal} from \"react-bootstrap\";\r\n\r\nconst AddAnimal = ({save}) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [population, setPopulation] = useState(\"\");\r\n    const isFormFilled = () => name && image && description && population;\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button\r\n                onClick={handleShow}\r\n                variant=\"dark\"\r\n                className=\"rounded-pill px-0 bi bi-plus\"\r\n                style={{width: \"38px\"}}\r\n            />\r\n            <Modal show={show} onHide={handleClose} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>New Animal</Modal.Title>\r\n                </Modal.Header>\r\n                <Form>\r\n                    <Modal.Body>\r\n                        <FloatingLabel\r\n                            controlId=\"inputName\"\r\n                            label=\"Animal name\"\r\n                            className=\"mb-3\"\r\n                        >\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                onChange={(e) => {\r\n                                    setName(e.target.value);\r\n                                }}\r\n                                placeholder=\"Enter name of animal\"\r\n                            />\r\n                        </FloatingLabel>\r\n                        <FloatingLabel\r\n                            controlId=\"inputUrl\"\r\n                            label=\"Image URL\"\r\n                            className=\"mb-3\"\r\n                        >\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Image URL\"\r\n                                onChange={(e) => {\r\n                                    setImage(e.target.value);\r\n                                }}\r\n                            />\r\n                        </FloatingLabel>\r\n                        <FloatingLabel\r\n                            controlId=\"inputDescription\"\r\n                            label=\"Description\"\r\n                            className=\"mb-3\"\r\n                        >\r\n                            <Form.Control\r\n                                as=\"textarea\"\r\n                                placeholder=\"description\"\r\n                                style={{height: \"80px\"}}\r\n                                onChange={(e) => {\r\n                                    setDescription(e.target.value);\r\n                                }}\r\n                            />\r\n                        </FloatingLabel>\r\n                        <FloatingLabel\r\n                            controlId=\"inputPopulation\"\r\n                            label=\"Population\"\r\n                            className=\"mb-3\"\r\n                        >\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Population\"\r\n                                onChange={(e) => {\r\n                                    setPopulation(e.target.value);\r\n                                }}\r\n                            />\r\n                        </FloatingLabel>\r\n                    </Modal.Body>\r\n                </Form>\r\n                <Modal.Footer>\r\n                    <Button variant=\"outline-secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"dark\"\r\n                        disabled={!isFormFilled()}\r\n                        onClick={() => {\r\n                            save({\r\n                                name,\r\n                                image,\r\n                                description,\r\n                                population,\r\n                            });\r\n                            handleClose();\r\n                        }}\r\n                    >\r\n                        Save animal\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nAddAnimal.propTypes = {\r\n    save: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddAnimal;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Badge, Button, Card, Col, Stack} from \"react-bootstrap\";\r\n\r\nconst Animal = ({animal, donate, deleteAnimal}) => {\r\n    const {id, name, description, image, population, owner, donation} =\r\n        animal;\r\n\r\n    const triggerDonate = () => {\r\n        donate(id);\r\n    };\r\n\r\n    const triggerDelete = () => {\r\n        deleteAnimal(id, owner);\r\n    }\r\n\r\n    const isOwner = window.walletConnection.account().accountId === owner;\r\n\r\n    return (\r\n        <Col>\r\n            <Card className=\" h-100\">\r\n                <Card.Header>\r\n                    <Stack direction=\"horizontal\" gap={2}>\r\n                        <span className=\"font-monospace text-secondary\">{owner}</span>\r\n                        <Badge bg=\"secondary\" className=\"ms-auto\">\r\n                            {donation} Donated\r\n                        </Badge>\r\n                    </Stack>\r\n                </Card.Header>\r\n                <div className=\" ratio ratio-4x3\">\r\n                    <img src={image} alt={name} style={{objectFit: \"cover\"}}/>\r\n                </div>\r\n                <Card.Body className=\"d-flex  flex-column text-center\">\r\n                    <Card.Title>{name}</Card.Title>\r\n                    <Card.Text className=\"flex-grow-1 \">{description}</Card.Text>\r\n                    <Card.Text className=\"text-secondary\">\r\n                        <span>Population: {population}</span>\r\n                    </Card.Text>\r\n                    {isOwner ?\r\n                        <Button\r\n                            variant=\"outline-dark\"\r\n                            onClick={triggerDelete}\r\n                            className=\"w-100 py-3 btn-danger\"\r\n                        >\r\n                            Delete animal\r\n                        </Button> :\r\n                        <Button\r\n                            variant=\"outline-dark\"\r\n                            onClick={triggerDonate}\r\n                            className=\"w-100 py-3\"\r\n                        >\r\n                            Donate One NEAR\r\n                        </Button>}\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    );\r\n};\r\n\r\nAnimal.propTypes = {\r\n    animal: PropTypes.instanceOf(Object).isRequired,\r\n    donate: PropTypes.func.isRequired,\r\n    deleteAnimal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Animal;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => (\r\n    <div className=\"d-flex justify-content-center\">\r\n        <Spinner animation=\"border\" role=\"status\" className=\"opacity-25\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n    </div>\r\n);\r\nexport default Loader;","import {v4 as uuid4} from \"uuid\";\r\nimport {parseNearAmount} from \"near-api-js/lib/utils/format\";\r\n\r\nconst GAS = 100000000000000;\r\n\r\nexport function createAnimal(animal) {\r\n    animal.id = uuid4();\r\n    return window.contract.setAnimal({animal});\r\n}\r\n\r\nexport function getAnimals() {\r\n    return window.contract.getAnimals();\r\n}\r\n\r\nexport async function donateOneNear(id) {\r\n    await window.contract.donateOneNear({id: id}, GAS, parseNearAmount(\"1\"));\r\n}\r\n\r\nexport async function deleteAnimal(id, owner) {\r\n    return window.contract.deleteAnimal({id, owner});\r\n}","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {toast} from \"react-toastify\";\r\nimport AddAnimal from \"./AddAnimal\";\r\nimport Animal from \"./Animal\";\r\nimport Loader from \"../utils/Loader\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport {NotificationError, NotificationSuccess} from \"../utils/Notifications\";\r\nimport {createAnimal, deleteAnimal, donateOneNear, getAnimals as getAnimalList} from \"../../utils/marketplace\";\r\n\r\nconst Animals = () => {\r\n    const [animals, setAnimals] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const getAnimals = useCallback(async () => {\r\n        try {\r\n            setLoading(true);\r\n            setAnimals(await getAnimalList());\r\n        } catch (error) {\r\n            console.log({error});\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    const addAnimal = async (data) => {\r\n        try {\r\n            setLoading(true);\r\n            createAnimal(data).then(() => {\r\n                getAnimals();\r\n            });\r\n            toast(<NotificationSuccess text=\"Animal added successfully.\"/>);\r\n        } catch (error) {\r\n            console.log({error});\r\n            toast(<NotificationError text=\"Failed to create an animal.\"/>);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const donate = async (id) => {\r\n        try {\r\n            await donateOneNear(id).then(() => getAnimals());\r\n            toast(<NotificationSuccess text=\"Donated successfully\"/>);\r\n        } catch (error) {\r\n            toast(<NotificationError text=\"Failed to donate\"/>);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const deleteOwnerAnimal = async (id, owner) => {\r\n        try {\r\n            await deleteAnimal(id, owner).then(() => getAnimals());\r\n            toast(<NotificationSuccess text=\"Deleted successfully\"/>);\r\n        } catch (error) {\r\n            toast(<NotificationError text=\"Failed to delete\"/>);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAnimals().then();\r\n    }, [getAnimals]);\r\n\r\n    return (\r\n        <>\r\n            {!loading ? (\r\n                <>\r\n                    <div className=\"d-flex justify-content-between align-items-center mb-4\">\r\n                        <h1 className=\"fs-4 fw-bold mb-0\">Save Wild Life</h1>\r\n                        <AddAnimal save={addAnimal}/>\r\n                    </div>\r\n                    <Row xs={1} sm={2} lg={3} className=\"g-3  mb-5 g-xl-4 g-xxl-5\">\r\n                        {animals.map((_animal) => (\r\n                            <Animal\r\n                                key={_animal.id}\r\n                                animal={{\r\n                                    ..._animal,\r\n                                }}\r\n                                donate={donate}\r\n                                deleteAnimal={deleteOwnerAnimal}\r\n                            />\r\n                        ))}\r\n                    </Row>\r\n                </>\r\n            ) : (\r\n                <Loader/>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Animals;","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst Cover = ({ login, coverImg }) => {\r\n    if (login) {\r\n        return (\r\n            <div\r\n                className=\"d-flex justify-content-center flex-column text-center \"\r\n                style={{ background: \"#000\", minHeight: \"100vh\" }}\r\n            >\r\n                <div className=\"mt-auto text-light mb-5\">\r\n                    <div\r\n                        className=\" ratio ratio-1x1 mx-auto mb-2\"\r\n                        style={{ maxWidth: \"320px\" }}\r\n                    >\r\n                        <img src={coverImg} alt=\"\" />\r\n                    </div>\r\n                    <p>Please connect your wallet to continue.</p>\r\n                    <Button\r\n                        onClick={login}\r\n                        variant=\"outline-light\"\r\n                        className=\"rounded-pill px-3 mt-3\"\r\n                    >\r\n                        Connect Wallet\r\n                    </Button>\r\n                </div>\r\n                <p className=\"mt-auto text-secondary\">Powered by NEAR</p>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Cover;","export default __webpack_public_path__ + \"static/media/coverImg.478d1a92.jpg\";","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport \"./App.css\";\r\nimport {accountBalance, login, logout as destroy} from \"./utils/near\";\r\nimport {Container, Nav} from \"react-bootstrap\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport {Notification} from \"./components/utils/Notifications\";\r\nimport Animals from \"./components/donatarium/Animals\";\r\nimport Cover from \"./components/utils/Cover\";\r\nimport coverImg from \"./assets/img/coverImg.jpg\";\r\n\r\nfunction App() {\r\n    const account = window.walletConnection.account();\r\n    const [balance, setBalance] = useState(\"0\");\r\n    const getBalance = useCallback(async () => {\r\n        if (account.accountId) {\r\n            setBalance(await accountBalance());\r\n        }\r\n    }, [account.accountId]);\r\n\r\n    useEffect(() => {\r\n        getBalance().then();\r\n    }, [getBalance]);\r\n    return (\r\n        <>\r\n            <Notification/>\r\n            {account.accountId ? (\r\n                <Container fluid=\"md\">\r\n                    <Nav className=\"justify-content-end pt-3 pb-5\">\r\n                        <Nav.Item>\r\n                            <Wallet\r\n                                address={account.accountId}\r\n                                amount={balance}\r\n                                symbol=\"NEAR\"\r\n                                destroy={destroy}\r\n                            />\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <main>\r\n                        <Animals/>\r\n                    </main>\r\n                </Container>\r\n            ) : (\r\n                <Cover login={login} coverImg={coverImg}/>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {initializeContract} from \"./utils/near\";\n\nimport \"bootstrap\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nwindow.nearInitPromise = initializeContract()\n    .then(() => {\n        const root = ReactDOM.createRoot(document.getElementById(\"root\"));\n        root.render(\n            <React.StrictMode>\n                <App/>\n            </React.StrictMode>\n        );\n    })\n    .catch(console.error);\n\nreportWebVitals();"],"sourceRoot":""}